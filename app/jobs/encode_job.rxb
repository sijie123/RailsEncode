class EncodeJob < ApplicationJob
  queue_as :default
  require 'streamio-ffmpeg'
  def perform(job, *args)
    # Do something later
    sleep(50)
    return
    movie = FFMPEG::Movie.new(job.filename)
    options = {
    video_codec: "libx264", frame_rate: 10, resolution: "320x240", video_bitrate: 300, video_bitrate_tolerance: 100,
    aspect: 1.333333, keyframe_interval: 90, x264_vprofile: "high", x264_preset: "slow",
    audio_codec: "libfaac", audio_bitrate: 32, audio_sample_rate: 22050, audio_channels: 1,
    threads: 2, custom: %w(-vf crop=60:60:10:10 -map 0:0 -map 0:1)
    }
    counter = 0
    movie.transcode(job.outname, options) do |progress|
      if (counter % 2 == 0)
        update_database(progress)
      end
      counter += 1;
    end
    
    queue_next_step()
  end
  
end
